{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jorge.sanchez\\\\Desktop\\\\proyecto\\\\cliente\\\\src\\\\components\\\\admin\\\\RegisterForm\\\\RegisterForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Checkbox, notification } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { emailValidation, minLengthValidation } from \"../../../utils/formValidation\";\nimport { signUpApi } from \"../../../api/user\";\nimport \"./RegisterForm.scss\"; //import FormItem from \"antd/lib/form/FormItem\";\n\nexport default function RegisterForm() {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n    privacyPolicy: false\n  });\n  const [formValid, setFormValid] = useState({\n    email: false,\n    password: false,\n    repeatPassword: false,\n    privacyPolicy: false\n  });\n\n  const changeForm = e => {\n    if (e.target.name === \"privacyPolicy\") {\n      //console.log(e);\n      //console.log(e.target.checked);\n      setInputs({ ...inputs,\n        [e.target.name]: e.target.checked\n      });\n    } else {\n      //console.log(e.target.name);\n      setInputs({ ...inputs,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const inputValidation = e => {\n    //console.log(\"validando......\");\n    const {\n      type,\n      name\n    } = e.target;\n\n    if (type === \"email\") {\n      setFormValid({ ...formValid,\n        [name]: emailValidation(e.target)\n      });\n    }\n\n    if (type === \"password\") {\n      setFormValid({ ...formValid,\n        [name]: minLengthValidation(e.target, 6)\n      });\n    }\n\n    if (type === \"checkbox\") {\n      setFormValid({ ...formValid,\n        [name]: e.target.checked\n      });\n    }\n  };\n\n  const register = async e => {\n    const emailVal = inputs.email;\n    const passwordVal = inputs.password;\n    const repeatPasswordVal = inputs.repeatPassword;\n    const privacyPolicyVal = inputs.privacyPolicy;\n\n    if (!emailVal || !passwordVal || !repeatPasswordVal || !privacyPolicyVal) {\n      notification[\"error\"]({\n        message: \"Todos los campos son obligatorios\"\n      });\n    } else {\n      if (passwordVal !== repeatPasswordVal) {\n        notification[\"error\"]({\n          message: \"Las contraseÃ±as tienen que ser iguales\"\n        });\n      } else {\n        //TO DO: conectar con el API y comprobar el usuario.\n        const result = await signUpApi(inputs); //console.log(result);\n\n        if (!result.ok) {\n          notification[\"error\"]({\n            message: result.message\n          });\n        } else {\n          notification[\"success\"]({\n            message: result.message\n          });\n          resetForm();\n        }\n      }\n    }\n  };\n\n  const resetForm = () => {\n    const input = document.getElementsByTagName('input');\n\n    for (let i = 0; i < input.length; i++) {\n      input[i].classList.remove(\"success\");\n      input[i].classList.remove(\"error\");\n    }\n\n    setInputs({\n      email: \"\",\n      password: \"\",\n      repeatPassword: \"\",\n      privacyPolicy: false\n    });\n    setFormValid({\n      email: false,\n      password: false,\n      repeatPassword: false,\n      privacyPolicy: false\n    });\n  }; //en el curso explican onFinish como onSubmit pero no funcionaba \n\n\n  return React.createElement(Form, {\n    className: \"register-form\",\n    onFinish: register,\n    onChange: changeForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Input, {\n    prefix: React.createElement(UserOutlined, {\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }),\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"correo electronico\",\n    className: \"register-form__input\",\n    onChange: inputValidation,\n    value: inputs.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Input, {\n    prefix: React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }),\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    className: \"register-form__input\",\n    onChange: inputValidation,\n    value: inputs.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Input, {\n    prefix: React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }),\n    type: \"password\",\n    name: \"repeatPassword\",\n    placeholder: \"Repetir contrase\\xF1a\",\n    className: \"register-form__input\",\n    onChange: inputValidation,\n    value: inputs.repeatPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    name: \"privacyPolicy\",\n    checked: inputs.privacyPolicy,\n    onChange: inputValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"He leido y acepto la politica de privacidad.\")), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Button, {\n    htmlType: \"submit\",\n    className: \"register-form__button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Crear cuenta\")));\n}","map":{"version":3,"sources":["C:/Users/jorge.sanchez/Desktop/proyecto/cliente/src/components/admin/RegisterForm/RegisterForm.js"],"names":["React","useState","Form","Input","Button","Checkbox","notification","UserOutlined","LockOutlined","emailValidation","minLengthValidation","signUpApi","RegisterForm","inputs","setInputs","email","password","repeatPassword","privacyPolicy","formValid","setFormValid","changeForm","e","target","name","checked","value","inputValidation","type","register","emailVal","passwordVal","repeatPasswordVal","privacyPolicyVal","message","result","ok","resetForm","input","document","getElementsByTagName","i","length","classList","remove","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCC,YAAxC,QAA4D,MAA5D;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C;AACA,SAASC,eAAT,EAA0BC,mBAA1B,QAAqD,+BAArD;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,OAAO,qBAAP,C,CACA;;AAEA,eAAe,SAASC,YAAT,GAAwB;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC;AACjCc,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,cAAc,EAAE,EAHiB;AAIjCC,IAAAA,aAAa,EAAE;AAJkB,GAAD,CAApC;AAMA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC;AACvCc,IAAAA,KAAK,EAAE,KADgC;AAEvCC,IAAAA,QAAQ,EAAE,KAF6B;AAGvCC,IAAAA,cAAc,EAAE,KAHuB;AAIvCC,IAAAA,aAAa,EAAE;AAJwB,GAAD,CAA1C;;AAOA,QAAMG,UAAU,GAAGC,CAAC,IAAI;AACpB,QAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,eAAtB,EAAuC;AACnC;AACA;AACAV,MAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,SAACS,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFpB,OAAD,CAAT;AAIH,KAPD,MAOO;AACH;AACAX,MAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,SAACS,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASG;AAFpB,OAAD,CAAT;AAIH;AACJ,GAfD;;AAiBA,QAAMC,eAAe,GAAGL,CAAC,IAAI;AACzB;AACA,UAAM;AAAEM,MAAAA,IAAF;AAAQJ,MAAAA;AAAR,QAAiBF,CAAC,CAACC,MAAzB;;AAEA,QAAIK,IAAI,KAAK,OAAb,EAAsB;AAClBR,MAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,SAACK,IAAD,GAAQf,eAAe,CAACa,CAAC,CAACC,MAAH;AAAvC,OAAD,CAAZ;AACH;;AAED,QAAIK,IAAI,KAAK,UAAb,EAAyB;AACrBR,MAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,SAACK,IAAD,GAAQd,mBAAmB,CAACY,CAAC,CAACC,MAAH,EAAW,CAAX;AAA3C,OAAD,CAAZ;AACH;;AAED,QAAIK,IAAI,KAAK,UAAb,EAAyB;AACrBR,MAAAA,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,SAACK,IAAD,GAAQF,CAAC,CAACC,MAAF,CAASE;AAAjC,OAAD,CAAZ;AACH;AAEJ,GAhBD;;AAkBA,QAAMI,QAAQ,GAAG,MAAMP,CAAN,IAAW;AACxB,UAAMQ,QAAQ,GAAGjB,MAAM,CAACE,KAAxB;AACA,UAAMgB,WAAW,GAAGlB,MAAM,CAACG,QAA3B;AACA,UAAMgB,iBAAiB,GAAGnB,MAAM,CAACI,cAAjC;AACA,UAAMgB,gBAAgB,GAAGpB,MAAM,CAACK,aAAhC;;AAEA,QAAI,CAACY,QAAD,IAAa,CAACC,WAAd,IAA6B,CAACC,iBAA9B,IAAmD,CAACC,gBAAxD,EAA0E;AACtE3B,MAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AAClB4B,QAAAA,OAAO,EAAE;AADS,OAAtB;AAGH,KAJD,MAIO;AACH,UAAIH,WAAW,KAAKC,iBAApB,EAAuC;AACnC1B,QAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AAClB4B,UAAAA,OAAO,EAAE;AADS,SAAtB;AAGH,OAJD,MAIO;AACH;AACA,cAAMC,MAAM,GAAG,MAAMxB,SAAS,CAACE,MAAD,CAA9B,CAFG,CAGH;;AAEA,YAAI,CAACsB,MAAM,CAACC,EAAZ,EAAgB;AACZ9B,UAAAA,YAAY,CAAC,OAAD,CAAZ,CAAsB;AAClB4B,YAAAA,OAAO,EAAEC,MAAM,CAACD;AADE,WAAtB;AAGH,SAJD,MAIO;AACH5B,UAAAA,YAAY,CAAC,SAAD,CAAZ,CAAwB;AACpB4B,YAAAA,OAAO,EAAEC,MAAM,CAACD;AADI,WAAxB;AAGAG,UAAAA,SAAS;AACZ;AAEJ;AACJ;AACJ,GAjCD;;AAmCA,QAAMA,SAAS,GAAG,MAAM;AACpB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,OAA9B,CAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACnCH,MAAAA,KAAK,CAACG,CAAD,CAAL,CAASE,SAAT,CAAmBC,MAAnB,CAA0B,SAA1B;AACAN,MAAAA,KAAK,CAACG,CAAD,CAAL,CAASE,SAAT,CAAmBC,MAAnB,CAA0B,OAA1B;AACH;;AAED9B,IAAAA,SAAS,CAAC;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,cAAc,EAAE,EAHV;AAINC,MAAAA,aAAa,EAAE;AAJT,KAAD,CAAT;AAOAE,IAAAA,YAAY,CAAC;AACTL,MAAAA,KAAK,EAAE,KADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,cAAc,EAAE,KAHP;AAITC,MAAAA,aAAa,EAAE;AAJN,KAAD,CAAZ;AAMH,GArBD,CApFmC,CA4GnC;;;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,QAAQ,EAAEW,QAA1C;AAAoD,IAAA,QAAQ,EAAER,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAEwB,QAAAA,KAAK,EAAE;AAAT,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,WAAW,EAAC,oBAJhB;AAKI,IAAA,SAAS,EAAC,sBALd;AAMI,IAAA,QAAQ,EAAElB,eANd;AAOI,IAAA,KAAK,EAAEd,MAAM,CAACE,KAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAYI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAE8B,QAAAA,KAAK,EAAE;AAAT,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,WAAW,EAAC,eAJhB;AAKI,IAAA,SAAS,EAAC,sBALd;AAMI,IAAA,QAAQ,EAAElB,eANd;AAOI,IAAA,KAAK,EAAEd,MAAM,CAACG,QAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,EAuBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAE,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAE6B,QAAAA,KAAK,EAAE;AAAT,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,IAAI,EAAC,gBAHT;AAII,IAAA,WAAW,EAAC,uBAJhB;AAKI,IAAA,SAAS,EAAC,sBALd;AAMI,IAAA,QAAQ,EAAElB,eANd;AAOI,IAAA,KAAK,EAAEd,MAAM,CAACI,cAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBJ,EAkCI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAC,eADT;AAEI,IAAA,OAAO,EAAEJ,MAAM,CAACK,aAFpB;AAGI,IAAA,QAAQ,EAAES,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADJ,CAlCJ,EA2CI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAC,QAAjB;AAA0B,IAAA,SAAS,EAAC,uBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CA3CJ,CADJ;AAoDH","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Button, Checkbox, notification } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { emailValidation, minLengthValidation } from \"../../../utils/formValidation\";\r\nimport { signUpApi } from \"../../../api/user\"\r\n\r\nimport \"./RegisterForm.scss\";\r\n//import FormItem from \"antd/lib/form/FormItem\";\r\n\r\nexport default function RegisterForm() {\r\n    const [inputs, setInputs] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        repeatPassword: \"\",\r\n        privacyPolicy: false\r\n    });\r\n    const [formValid, setFormValid] = useState({\r\n        email: false,\r\n        password: false,\r\n        repeatPassword: false,\r\n        privacyPolicy: false\r\n    })\r\n\r\n    const changeForm = e => {\r\n        if (e.target.name === \"privacyPolicy\") {\r\n            //console.log(e);\r\n            //console.log(e.target.checked);\r\n            setInputs({\r\n                ...inputs,\r\n                [e.target.name]: e.target.checked\r\n            });\r\n        } else {\r\n            //console.log(e.target.name);\r\n            setInputs({\r\n                ...inputs,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    const inputValidation = e => {\r\n        //console.log(\"validando......\");\r\n        const { type, name } = e.target;\r\n\r\n        if (type === \"email\") {\r\n            setFormValid({ ...formValid, [name]: emailValidation(e.target) });\r\n        }\r\n\r\n        if (type === \"password\") {\r\n            setFormValid({ ...formValid, [name]: minLengthValidation(e.target, 6) });\r\n        }\r\n\r\n        if (type === \"checkbox\") {\r\n            setFormValid({ ...formValid, [name]: e.target.checked })\r\n        }\r\n\r\n    };\r\n\r\n    const register = async e => {\r\n        const emailVal = inputs.email;\r\n        const passwordVal = inputs.password;\r\n        const repeatPasswordVal = inputs.repeatPassword;\r\n        const privacyPolicyVal = inputs.privacyPolicy;\r\n\r\n        if (!emailVal || !passwordVal || !repeatPasswordVal || !privacyPolicyVal) {\r\n            notification[\"error\"]({\r\n                message: \"Todos los campos son obligatorios\"\r\n            })\r\n        } else {\r\n            if (passwordVal !== repeatPasswordVal) {\r\n                notification[\"error\"]({\r\n                    message: \"Las contraseÃ±as tienen que ser iguales\"\r\n                })\r\n            } else {\r\n                //TO DO: conectar con el API y comprobar el usuario.\r\n                const result = await signUpApi(inputs);\r\n                //console.log(result);\r\n\r\n                if (!result.ok) {\r\n                    notification[\"error\"]({\r\n                        message: result.message\r\n                    });\r\n                } else {\r\n                    notification[\"success\"]({\r\n                        message: result.message\r\n                    });\r\n                    resetForm();\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    const resetForm = () => {\r\n        const input = document.getElementsByTagName('input');\r\n\r\n        for (let i = 0; i < input.length; i++) {\r\n            input[i].classList.remove(\"success\")\r\n            input[i].classList.remove(\"error\")\r\n        }\r\n\r\n        setInputs({\r\n            email: \"\",\r\n            password: \"\",\r\n            repeatPassword: \"\",\r\n            privacyPolicy: false\r\n        });\r\n\r\n        setFormValid({\r\n            email: false,\r\n            password: false,\r\n            repeatPassword: false,\r\n            privacyPolicy: false\r\n        });\r\n    };\r\n\r\n\r\n    //en el curso explican onFinish como onSubmit pero no funcionaba \r\n    return (\r\n        <Form className=\"register-form\" onFinish={register} onChange={changeForm}>\r\n            <Form.Item>\r\n                <Input\r\n                    prefix={<UserOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"correo electronico\"\r\n                    className=\"register-form__input\"\r\n                    onChange={inputValidation}\r\n                    value={inputs.email}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Input\r\n                    prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"ContraseÃ±a\"\r\n                    className=\"register-form__input\"\r\n                    onChange={inputValidation}\r\n                    value={inputs.password}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Input\r\n                    prefix={<LockOutlined style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n                    type=\"password\"\r\n                    name=\"repeatPassword\"\r\n                    placeholder=\"Repetir contraseÃ±a\"\r\n                    className=\"register-form__input\"\r\n                    onChange={inputValidation}\r\n                    value={inputs.repeatPassword}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Checkbox\r\n                    name=\"privacyPolicy\"\r\n                    checked={inputs.privacyPolicy}\r\n                    onChange={inputValidation}\r\n                >\r\n                    He leido y acepto la politica de privacidad.\r\n                </Checkbox>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button htmlType=\"submit\" className=\"register-form__button\">\r\n                    Crear cuenta\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}