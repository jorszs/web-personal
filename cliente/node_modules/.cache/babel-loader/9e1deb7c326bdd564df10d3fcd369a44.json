{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jorge.sanchez\\\\Desktop\\\\proyecto\\\\cliente\\\\src\\\\providers\\\\AuthProvider.js\";\nimport React, { useState, useEffect, createContext } from \"react\"; // eslint-disable-next-line no-unused-vars\n\nimport { getAccessTokenApi, getRefreshTokenApi, refreshAccessTokenApi, logout } from \"../api/auth\";\nimport jwtDecode from \"jwt-decode\";\nexport const AuthContext = createContext();\nexport default function AuthProvider(props) {\n  //console.log(props);\n  const {\n    children\n  } = props; // eslint-disable-next-line no-unused-vars\n\n  const [user, setUser] = useState({\n    user: null,\n    isLoading: true\n  });\n  useEffect(() => {\n    checkUserLogin(setUser);\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, children);\n}\n\nfunction checkUserLogin(setUser) {\n  //console.log(\"useuuer\");\n  const accessToken = getAccessTokenApi(); //console.log(accessToken);\n\n  if (!accessToken) {\n    const refreshToken = getRefreshTokenApi();\n\n    if (!refreshToken) {\n      logout();\n      setUser({\n        user: null,\n        isLoading: false\n      });\n    } else {\n      refreshAccessTokenApi(refreshToken);\n    }\n  } else {\n    setUser({\n      isLoading: false,\n      user: jwtDecode(accessToken)\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/jorge.sanchez/Desktop/proyecto/cliente/src/providers/AuthProvider.js"],"names":["React","useState","useEffect","createContext","getAccessTokenApi","getRefreshTokenApi","refreshAccessTokenApi","logout","jwtDecode","AuthContext","AuthProvider","props","children","user","setUser","isLoading","checkUserLogin","accessToken","refreshToken"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D,C,CACA;;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,EAAgDC,qBAAhD,EAAuEC,MAAvE,QAAqF,aAArF;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,OAAO,MAAMC,WAAW,GAAGN,aAAa,EAAjC;AAEP,eAAe,SAASO,YAAT,CAAsBC,KAAtB,EAA6B;AACxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB,CAFwC,CAGxC;;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAC7BY,IAAAA,IAAI,EAAE,IADuB;AAE7BE,IAAAA,SAAS,EAAE;AAFkB,GAAD,CAAhC;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,cAAc,CAACF,OAAD,CAAd;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAED,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,QAApC,CAAP;AACH;;AAED,SAASI,cAAT,CAAwBF,OAAxB,EAAiC;AAC7B;AACA,QAAMG,WAAW,GAAGb,iBAAiB,EAArC,CAF6B,CAG7B;;AAEA,MAAI,CAACa,WAAL,EAAkB;AACd,UAAMC,YAAY,GAAGb,kBAAkB,EAAvC;;AAEA,QAAI,CAACa,YAAL,EAAmB;AACfX,MAAAA,MAAM;AACNO,MAAAA,OAAO,CAAC;AACJD,QAAAA,IAAI,EAAE,IADF;AAEJE,QAAAA,SAAS,EAAE;AAFP,OAAD,CAAP;AAIH,KAND,MAMO;AACHT,MAAAA,qBAAqB,CAACY,YAAD,CAArB;AACH;AACJ,GAZD,MAYO;AACHJ,IAAAA,OAAO,CAAC;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJF,MAAAA,IAAI,EAAEL,SAAS,CAACS,WAAD;AAFX,KAAD,CAAP;AAIH;AAIJ","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\n// eslint-disable-next-line no-unused-vars\r\nimport { getAccessTokenApi, getRefreshTokenApi, refreshAccessTokenApi, logout } from \"../api/auth\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default function AuthProvider(props) {\r\n    //console.log(props);\r\n    const { children } = props;\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [user, setUser] = useState({\r\n        user: null,\r\n        isLoading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        checkUserLogin(setUser)\r\n    }, [])\r\n\r\n    return <AuthContext.Provider value={user}>{children}</AuthContext.Provider>\r\n}\r\n\r\nfunction checkUserLogin(setUser) {\r\n    //console.log(\"useuuer\");\r\n    const accessToken = getAccessTokenApi();\r\n    //console.log(accessToken);\r\n\r\n    if (!accessToken) {\r\n        const refreshToken = getRefreshTokenApi();\r\n\r\n        if (!refreshToken) {\r\n            logout();\r\n            setUser({\r\n                user: null,\r\n                isLoading: false\r\n            });\r\n        } else {\r\n            refreshAccessTokenApi(refreshToken);\r\n        }\r\n    } else {\r\n        setUser({\r\n            isLoading: false,\r\n            user: jwtDecode(accessToken)\r\n        })\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}